<shader>{
	"name":"VecWColor",
	"ubo":[ "UBOTransform" ],
	"options": { "modelMatrix":true },
	"uniforms":[
		{ "name":"u_colorAry", "type":"vec3" }
	]
}<\shader>
	
<materials>[
	{ "name":"VecWColor",	
		"options"	: { "depthTest":true, "blend":false },
		"uniforms":[
		{ "name":"u_colorAry", "type":"rgb", "value": ["ff0000","00ff00","0000ff","555555","999999","dddddd","000000","ff7f7f","ff8c00","ffff00"] }
	]},
	
	{ "name":"MatGridFloor",	
		"options"	: { "depthTest":true, "blend":false },
		"uniforms":[
		{ "name":"u_colorAry", "type":"rgb", "value": ["e6e6e6","ff9999","66ff66"] }
	] },

	{ "name":"MatGridFloorDark",
		"options"	: { "depthTest":true, "blend":false },
		"uniforms":[
		{ "name":"u_colorAry", "type":"rgb", "value": ["555555","bb5555","118811"] }
	] }
]<\materials>
	
<vertex>
	#version 300 es
	layout(location=0) in vec4 a_position;

	uniform UBOTransform{
		mat4	projViewMatrix;
		vec3	cameraPos;
		float	globalTime;
		vec2	screenSize;
	};

	uniform mat4 u_modelMatrix;
	uniform vec3 u_colorAry[20];

	out vec3 v_color;

	void main(void){
		v_color			= u_colorAry[ int(a_position.w) ];

		gl_PointSize 	= 10.0;
		gl_Position 	= projViewMatrix * u_modelMatrix * vec4(a_position.xyz, 1.0);
	}
<\vertex>

<fragment>
	#version 300 es
	precision mediump float;

	in vec3 v_color;
	out vec4 oFragColor;

	void main(void){ oFragColor = vec4(v_color, 1.0); }
<\fragment>	